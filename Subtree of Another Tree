/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean match(TreeNode root,TreeNode root2){
        if(root==null && root2==null)
        return true;
        if(root==null||root2==null)
        return false;

        if(root.val!=root2.val)
        return false;

        boolean left = match(root.left,root2.left);
        boolean right = match(root.right,root2.right);

        return left && right;

    }

    public boolean isSubtree(TreeNode root, TreeNode subRoot) {

        if(root==null && subRoot==null)
        return true;
        if(root==null|| subRoot==null)
        return false;

        if(root.val==subRoot.val && match(root,subRoot)){
           return true;
        }

        boolean left = isSubtree(root.left,subRoot);
        boolean right = isSubtree(root.right,subRoot);

        return left || right;

        
    }
}
