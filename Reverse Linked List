/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {

        if(head==null){
            return null;
        }

        ListNode prev = null;
            ListNode temp =head;

        while( head!=null){
        
            head =head.next;
            temp.next=prev;
            prev = temp;
            temp=head;
        }

return prev;



// ---------Recursive ways---------------------->>>>

// ListNode temp = head;

// if(temp==null || temp.next==null){
//     return temp;
// }


// ListNode t = reverseList(temp.next);

// temp.next.next = temp;
// temp.next = null;

// return t;







        // ---------iterative ways----------------------

// if(head==null){
//     return head;
// }

// ListNode prev = null;

// ListNode current  = head;


// while(current!=null){

//     ListNode temp = current.next;

// current.next = prev;
// prev =current; 

// current = temp;




// }



// return prev;




        
    }
}
