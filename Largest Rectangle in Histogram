class Solution {
    
    public int largestRectangleArea(int[] arr) {


        int left[] = new int[arr.length];
        int right []=new int[arr.length];

        Stack<Integer>s =new Stack<>();


       for(int i=0;i<arr.length;i++){
           while(!s.isEmpty() && arr[s.peek()]>=arr[i])
           s.pop();

           if(s.isEmpty()){
               left[i]=-1;
           }else{
               left[i]=s.peek();
           }
           s.push(i);
       }

        s=new Stack<>();

        for(int i=arr.length-1;i>=0;i--){

            while(!s.isEmpty() && arr[s.peek()]>=arr[i])
            s.pop();

            if(s.isEmpty()){
                right[i]=arr.length;
            }else{
                right[i]=s.peek();
            }
            s.push(i);


        }

        int total=Integer.MIN_VALUE;


        for(int i=0;i<arr.length;i++){

            int val = right[i]  -(left[i]+1);
            total= Math.max(total,(val*arr[i]));


        }

return total;

         
        
    }
}
