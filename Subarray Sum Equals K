class Solution {
    public int subarraySum(int[] nums, int k) {

        // It is the most optimal solutions....

        HashMap<Integer,Integer> map = new HashMap<>();

        map.put(0,1);

        int count=0;
        int sum=0;

        for(int i=0;i<nums.length;i++){
            sum +=nums[i];
            int curr = sum-k;

            if(map.containsKey(curr)){
                count+=map.get(curr);
            }
                map.put(sum,map.getOrDefault(sum,0)+1);

        }
        return count;
      


//         int number =0;

//         for(int i=0;i<nums.length;i++){
//             int sum =nums[i];
//             if(sum==k){
//                 number++;
//             }

//             for(int j=i+1;j<nums.length;j++){

                

// sum+=nums[j];

// if(sum==k){
// number++;
// }

//             }


//         }
//         return number;
        
    }
}
